---
name: "Unit tests and builds"
on:
  push:
    branches: ['**']
  release:
    types: [released]
env:
  TESTING_IMAGE_NAME: geospaas_rest_api_tests
jobs:
  tests_build:
    name: Run unit tests and build package
    runs-on: 'ubuntu-20.04'
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build testing image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.TESTING_IMAGE_NAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: 'Run tests'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
             docker run --rm
             -v "$(pwd):/src"
             -e "GITHUB_ACTIONS=$GITHUB_ACTIONS"
             -e "GITHUB_REF=$GITHUB_REF"
             -e "GITHUB_SHA=$GITHUB_SHA"
             -e "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
             -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
             -e "GITHUB_RUN_ID=$GITHUB_RUN_ID"
             -e "GITHUB_TOKEN=$GITHUB_TOKEN"
             "${TESTING_IMAGE_NAME}"
             bash -c "coverage run --source=./geospaas_rest_api
             --omit='geospaas_rest_api/tests/*'
             --omit='geospaas_rest_api/v1/*'
             runtests.py
             && coveralls"

      - name: 'Build Python package'
        if: github.event_name == 'release'
        env:
          TAG_REF: ${{ github.ref }}
        run: >
             docker run --rm
             -v "$(pwd):/src"
             -e "GEOSPAAS_REST_API_RELEASE=${TAG_REF#refs/tags/}"
             "${TESTING_IMAGE_NAME}"
             python setup.py sdist bdist_wheel

      - name: 'Deploy package to the Github release'
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'dist/*'
          file_glob: true
          tag: ${{ github.ref }}
...